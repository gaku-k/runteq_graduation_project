name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: runteq_graduation_project_test
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Install packages
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y \
            chromium-browser curl libjemalloc2 libvips postgresql-client

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Add app bin to PATH
        run: echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH

      - name: Wait for PostgreSQL to start
        run: |
          echo "Waiting for PostgreSQL service to be ready..."
          timeout 90s bash -c 'until pg_isready -h db -U postgres; do echo "Still waiting for database..."; sleep 1; done'
          echo "PostgreSQL container is up"

      - name: Debug DB state
        run: |
          echo "Listing databases in PostgreSQL:"
          PGPASSWORD=postgres psql -h db -U postgres -l

      - name: Database setup
        run: bin/rails db:prepare
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@db:5432/runteq_graduation_project_test

      - name: Confirm test DB created
        run: |
          echo "Checking test DB:"
          PGPASSWORD=postgres psql -h db -U postgres -l | grep runteq_graduation_project_test || echo "Test DB not found!"

      - name: Run tests
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@db:5432/runteq_graduation_project_test
        run: bin/rails test:all

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore